---
title: "docker"
date: 2018-05-29T21:23:09+08:00
categories:
 - docker
tags:
 - docer
 - mac



---
* 安装

#+BEGIN_SRC 
下载 https://download.docker.com/mac/stable/Docker.dmg
#+END_SRC

- 启动 mysql 镜像 

#+BEGIN_SRC 


下载MySQL镜像
docker pull mysql
配置
docker run -d -p 127.0.0.1:3306:3306 --name mysql -v /Users/wangzla/docker/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysql:latest
启动mysql
docker start mysql
docker exec -it mysql bash
mysql -u root -p
然后输入密码123456
show databases;
 
远程登录
会报错，要修改密码
ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'root';


#+END_SRC
* 数据乱码问题
  
#+BEGIN_SRC 
SHOW VARIABLES LIKE 'character_set_%';//查看数据库字符集
SHOW VARIABLES LIKE 'collation_%';
SET NAMES 'utf8';
# vim /etc/mysql/mysql.conf.d/mysql.cnf

加入： 
[mysql] 
default-character-set = utf8
[mysql.server] 
default-character-set = utf8
[mysqld_safe] 
default-character-set = utf8
[client] 
default-character-set = utf8
[mysqld] 
character_set_server=utf8 
init_connect=’SET NAMES utf8’


1.查看数据库编码格式

1
mysql> show variables like 'character_set_database';
 2.查看数据表的编码格式

1
mysql> show create table <表名>;
 3.创建数据库时指定数据库的字符集

mysql>create database <数据库名> character set utf8;
4.创建数据表时指定数据表的编码格式

create table tb_books (
    name varchar(45) not null,
    price double not null,
    bookCount int not null,
    author varchar(45) not null ) default charset = utf8;
5.修改数据库的编码格式

mysql>alter database <数据库名> character set utf8;
6.修改数据表格编码格式

mysql>alter table <表名> character set utf8;
7.修改字段编码格式

mysql>alter table <表名> change <字段名> <字段名> <类型> character set utf8;

mysql>alter table user change username username varchar(20) character set utf8 not null;
 8.添加外键

mysql>alter table tb_product add constraint fk_1 foreign key(factoryid) references tb_factory(factoryid);
mysql>alter table <表名> add constraint <外键名> foreign key<字段名> REFERENCES <外表表名><字段名>;
9.删除外键

mysql>alter table tb_people drop foreign key fk_1;
mysql>alter table <表名> drop foreign key <外键名>;
 

新建表的时候设置指定字符集
create table customer (
		id int primary key auto_increment,
		name varchar(20),
		gender varchar(10),
		birthday date,
		cellphone varchar(20),
		email varchar(40),
		preference varchar(100),
		type varchar(40),
		description varchar(255)
	)DEFAULT CHARSET=utf8;
#+END_SRC
*  mac 快捷键
#+BEGIN_SRC 
shift+commond +G 进入指定文件夹
Finder 创建多个 commond +t
lsof -i tcp:xxx
kill xxx

#+END_SRC
* docker命令
** 镜像操作

#+BEGIN_SRC 
docker images

#+END_SRC
*** 获取一个新的镜像

#+BEGIN_SRC 
docker pull mysql:5.6
#+END_SRC
*** 查找镜像

#+BEGIN_SRC 
docker search httpd
#+END_SRC
*** 更新镜像

#+BEGIN_SRC 
docker run -i -t ubuntu:15.10 /bin/bash
在容器内使用apt-get update 命令更新,然后退出容器,记录容器id=x,
然后通过命令docker commit 来提交容器副本
docker commit -m="has update" x runob/ubuntu:v2
#+END_SRC
*** 构建镜像

使用docker build ,从零开始来创建一个新的镜像,需要创建一
*** 设置镜像标签
使用docker tag 命令为镜像添加一个新的标签
#+BEGIN_SRC 
docker tag xxx runob/centos:dev
#+END_SRC
*** 删除一个镜像

#+BEGIN_SRC 
docker rmi <image id>
#+END_SRC
*** 删除所有镜像

#+BEGIN_SRC 
docker rmi $(docker images -q)
#+END_SRC
** 容器操作
*** 创建容器

#+BEGIN_SRC 
docer run -i -t --name=xxx centos /bin/bash
i: 打开容器的标准输入
t:告诉docker为容器建立一个命令行终端
name:指定容器名称
centos:告诉我们使用什么镜像来启动容器
/bin/bash 告诉docker要在容器里面指定此命令
#+END_SRC
*** 启动容器

#+BEGIN_SRC 
启动一个已经停止的docker run 镜像
docker start xxx  
#+END_SRC
*** 
*** 终止容器

#+BEGIN_SRC 
docker stop 退出
docker kill 强制停止
#+END_SRC
*** 删除一个容器

#+BEGIN_SRC 
docker rm /xxx

#+END_SRC

*** 删除所有容器

#+BEGIN_SRC 
docker rm $(docker ps -a -q)
停止所有容器
docker stop $(docker ps -a -q)
#+END_SRC

