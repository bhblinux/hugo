** 非静态代码块
   1. 可以对类的属性进行初始化
   2. 里面可以有输出语句
   3. 可以有多个代码块,顺序执行
   4. 每创建一个类的对象,非静态代码块就加载一次
   5. 非静态代码块的执行早于构造器
** static代码块
   1. 加载一次
   2. 早于非静态
   3. 多个静态,按顺序执行
   4. 只能执行对静态的方法和属性操作
** 内部类
   1. 成员内部类
      创建静态内部类的对象,可以直接通过外部类调用静态内部类的构造器
      #+BEGIN_SRC 
      Person.Dog d=new Person.Dog();
      #+END_SRC
      创建非静态的内部类对象,必须先创建外部类的对象,通过外部类的对象调用内部类的构造器
      #+BEGIN_SRC 
      Person p=new Person();
      Person.Bird b=p.new Bird();
      #+END_SRC
** 集合
   java.util接口 Collection<E>
*** Collection接口

*** Set
*** List

*** Collections
*** Iterator
*** 排序
**** compartor 接口定制排序
**** Comparable 接口 自然排序
** Map
** 多线程
** 反射
*** 获取Class类的实例的4种方式
    1. Class clazz1=String.class;
    2. Class clazz2=new Person().getClass();
    3. Class class3=Class.forName("com.yonyou.xx");
    4. 类加载器
       #+BEGIN_SRC 
       ClassLoader cl=this.getClass().getClassLoader();
       Class clazz4=cl.loadClass(className);
       #+END_SRC

